# Configuration Docker Compose pour GMAO Trans'urb

services:
  # Application Laravel GMAO Trans'urb
  app:
    build:
      context: .
      dockerfile: Dockerfile.simple
    container_name: gmao_transurb_app
    restart: unless-stopped
    volumes:
      - .:/var/www/html
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    ports:
      - "8084:80"
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=base64:GnZbplyZb7vVHNNucFs5gFav5uDOZZ7tZHtWpWh84Hw=
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=gmao_transurb
      - DB_USERNAME=gmao_user
      - DB_PASSWORD=gmao_password
      - CACHE_DRIVER=file
      - SESSION_DRIVER=file
      - QUEUE_CONNECTION=sync
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - db
      - redis
    networks:
      - gmao_network

  # Base de données MySQL
  db:
    image: mysql:8.0
    container_name: gmao_transurb_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password}
      MYSQL_DATABASE: ${DB_DATABASE:-gmao_transurb}
      MYSQL_USER: ${DB_USERNAME:-gmao_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-gmao_password}
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "3308:3306"
    networks:
      - gmao_network

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: gmao_transurb_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gmao_network

  # PHPMyAdmin pour la gestion de la base de données
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: gmao_transurb_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: ${DB_USERNAME:-gmao_user}
      PMA_PASSWORD: ${DB_PASSWORD:-gmao_password}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password}
      PMA_ARBITRARY: 1
      PMA_ABSOLUTE_URI: http://localhost:8085/
    ports:
      - "8085:80"
    depends_on:
      - db
    networks:
      - gmao_network

  # Serveur web Nginx (optionnel, pour la production)
  nginx:
    image: nginx:alpine
    container_name: gmao_transurb_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./public:/var/www/html/public
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites-available:/etc/nginx/sites-available
      - ./docker/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - gmao_network

  # Gestionnaire de files d'attente
  queue:
    build:
      context: .
      dockerfile: Dockerfile.simple
    container_name: gmao_transurb_queue
    restart: unless-stopped
    command: php artisan queue:work --sleep=3 --tries=3 --timeout=90
    volumes:
      - .:/var/www/html
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE:-gmao_transurb}
      - DB_USERNAME=${DB_USERNAME:-gmao_user}
      - DB_PASSWORD=${DB_PASSWORD:-gmao_password}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
    depends_on:
      - db
      - redis
    networks:
      - gmao_network

  # Planificateur de tâches (cron)
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.simple
    container_name: gmao_transurb_scheduler
    restart: unless-stopped
    command: /bin/sh -c "while true; do php artisan schedule:run; sleep 60; done"
    volumes:
      - .:/var/www/html
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_KEY=${APP_KEY}
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE:-gmao_transurb}
      - DB_USERNAME=${DB_USERNAME:-gmao_user}
      - DB_PASSWORD=${DB_PASSWORD:-gmao_password}
    depends_on:
      - db
    networks:
      - gmao_network

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local

networks:
  gmao_network:
    driver: bridge
